/* position / flex */
/* flex -> 부모,자식에만 사용 혼자는 사용 못함, 부모에 flex주면 자식에 적용 */

.header {
  /* 겹치기할때 많이 쓰는 기법 position */
  /* absolute를 주면 부모가 간섭을 안함 layout에서 빠짐 원하는 좌표 지정 가능 (ex. 팝업창) , 넓이는 자기가 가질수있는 최소한의 넓이만 가짐. 넓이 지정해주어야함 ,자식들도 넓이 100%차지하게됨*/
  /* position: absolute; */
  position: fixed;
  /* position fixed주면 무조건 body기준으로 fix */
  width: 100%;
  height: 100px;
  background-color: rgba(255, 255, 255, 0);
  /* 높이 100px 바깥에 있는 것들 사라지게함 */
  overflow: hidden;
  /* 비디오랑 같이쓰면 비디오때문에 a태그 안먹힘 header에서 z축을 만들어줘야함 */
  z-index: 99;
  /* border-bottom:1px solid #ccc ; */
  /* 마우스뗄때도 부드럽게 바꾸고싶으면 header에도 transition */
  transition: all 0.5s ease;
}

.header .logo a .white {
  position: absolute;
  transition: all 0.25s ease;
}

.header .logo a .black {
  /* 투명도 처리하는 태그 */
  opacity: 0;
  transition: all 0.25s ease;
}

.header:hover .logo a .black {
  opacity: 1;
  transition: all 0.25s ease;
}
.header:hover .logo a .white {
  opacity: 0;
  transition: all 0.25s ease;
}

/* 가상의 태그 */
/* pseudo element */
/* html에 빈 div태그 만들수있지만 시멘틱하지않음 */

.header:after {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  background-color: #ccc;
  position: absolute;
  top: 100px;
  /* 두개가 겹쳐져있으면 position있는 쪽이 우선적용됨 */
  /* 둘다 있으면 아래에 있는 태그가 우선적용 */
  /* depth01에 z-index를 줘도됨. 근데 -1은안되고 position갖고있어야됨 */
  z-index: -1;
}

.header:hover {
  height: 350px;
  background-color: rgba(255, 255, 255, 0.25);
  /* 천천히바꼈으면할때 */
  transition: all 0.5s ease;
}

.header:hover .list {
  color: black;
}

.header .logo {
  position: absolute;
  height: 100px;
  /* 이미지를 가운데로 보내고 싶을땐 line-height쓰면 안되고 flex처리 해줘야함 */
  display: flex;
  align-items: center;
  padding-left: 50px;
  padding-right: 50px;
}

.list {
  color: #fff;
  display: flex; /* flex쓰면 main축(가로)이 생김 */
  justify-content: center; /*(main축에서)방향결정 / start, center, end /space-between,around,evenly */
}

.list .depth01 {
  font-size: 20px;
  font-weight: 500;

  /* display: block; 인라인형태는 넓이 높이를 줄 수 없음 */
  /* line-height: 100px; 한줄만 있을때 높이만큼의 line-height를 주면 가운데로 옴 */
  height: 100px;
  display: flex;
  align-items: center; /*cross축에 씀*/
  /* width: 200px; */
  padding-left: 50px;
  padding-right: 50px;
  /* margin을 쓰면 바깥으로 잡혀서 클릭영역이 좁아짐 */
  /* margin-left: 50px;
  margin-right: 50px; */
  justify-content: center;
  /* outline: 1px solid #ff0000; */
  transition: all 0.25s ease;

  /* 투명해지면 덜컹거리는 느낌은 없음 */
  border-bottom: 2px solid transparent;
}

.list > li:hover .depth01 {
  color: #f60;
  /* border-bottom: 2px solid #f60; */
}

/* 아래 width 100%에 대한 기준을 depth01로 잡아주기 */
/* 부모에 position relative가 없으면 한단계 더 올라감 li position찾아감 없으면 또 올라감 */
.list > li .depth01 {
  /* relative 현재 자기가 있는 시점을 기준 */
  position: relative;
}

.list > li .depth01::after {
  /* content 필수로 들어가야함 "내용을 넣어야지만 화면에 보여짐" */
  content: "";
  /* display를 잡아줘야 넓이,높이가 생김 */
  /* a태그가 flex처리돼서 옆으로 생김 */
  /* 그래서 position을 absolute로 줘야 부모태그 신경 안씀*/
  position: absolute;
  /* position을 잡아서 좌표를 줄 수 있음 */
  left: 0;
  bottom: -2px;
  display: block;
  /* 100%라는게 기준이 있어야함 */
  width: 100%;
  height: 3px;
  background-color: #f60;
  /* 넓이가 가운데 기준으로 쪼그라듦 0~1사이 기준*/
  transform: scaleX(0);
  /* 옆으로 벌어지는 느낌 */
  transition: all 0.25s ease;
}
/* hover 했을때 옆으로 늘어나게 해주기 */
.list > li:hover .depth01:after {
  transform: scaleX(1);
}

.list .depth02 {
  /* justify-content: center; 써도 되는데 text-align:center써도됨 */
  text-align: center;
  padding-top: 5px;
}

.list .depth02 li a {
  /* text는 flex로쓰면 justify해서 center잡고 align-item center로 잡아줘야함 */
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: 10px;
  padding-bottom: 10px;
}

.list .depth02 li a:hover {
  color: #f60;
}

.popup {
  display: none;
  position: fixed;
  background-color: #fff;
  border: 1px solid #ccc;
  padding: 10px;
  left: 100px;
  top: 100px;
  /* 그림자 x축방향, y축방향, 블러, 검정색인데 반투명한색 */
  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.1);
}
